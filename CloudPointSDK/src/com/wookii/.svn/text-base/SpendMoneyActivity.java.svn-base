package com.cloudpoint.cpgamespaysdk.activitis;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.method.PasswordTransformationMethod;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.Toast;

import com.cloudpoint.cpgamespaysdk.common.Contants;
import com.cloudpoint.cpgamespaysdk.protocollManager.ProtocolManager;
import com.cloudpoint.cpgamespaysdk.utils.DeviceTool;
import com.cloudpoint.cpgamespaysdk.utils.LoginMessageDataUtils;
import com.cloudpoint.cpgamespaysdk.utils.Str_MD5;

public class SpendMoneyActivity extends Activity {
	String token = "";
	String uid = "";
	String gid;
	/** 内容描述 */
	String mlmemo;
	String money = "";
	int intMoney;
	String password;

	String otherCode = "";
	String customerOrder = "";
	LinearLayout spendMoneyLay;
	Button btnId_for_submit;
	EditText EditId_for_spendContent, EditId_for_spendMoney, EditId_for_pwd;

	String toastInfo;
	private ProgressDialog pd;
	ProtocolManager dataManager;
	private Handler mHandler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case ProtocolManager.NOTIFICATION:
				if (pd != null) {
					if (pd.isShowing()) {
						pd.dismiss();
					}
				}
				toastInfo = msg.obj.toString();
				Intent intent = new Intent();
				intent.putExtra("JSON", toastInfo);
				setResult(CloudPointSDKManager.SPEND_MONEY_REQUEST_CODE, intent);
				Toast.makeText(SpendMoneyActivity.this, "扣除成功",
						Toast.LENGTH_LONG).show();
				finish();
				break;
			case ProtocolManager.NETWORK_ERROR:
				if (pd != null) {
					if (pd.isShowing()) {
						pd.dismiss();
					}
				}
				break;

			case ProtocolManager.TIMEOUT_ERROR:

				break;
			case ProtocolManager.NOTIFICATION_RESPONSE_ERRORINFO:
				if (pd != null) {
					if (pd.isShowing()) {
						pd.dismiss();
					}
				}
				toastInfo = msg.obj.toString();
				Toast.makeText(SpendMoneyActivity.this, toastInfo,
						Toast.LENGTH_LONG).show();
				break;
			case ProtocolManager.NOTIFICATION_YANGZHENGCODE:
				if (pd != null) {
					if (pd.isShowing()) {
						pd.dismiss();
					}
				}
				otherCode = msg.obj.toString();

				String uid = LoginMessageDataUtils
						.getUID(SpendMoneyActivity.this);
				String token = LoginMessageDataUtils
						.getToken(SpendMoneyActivity.this);

				token = Str_MD5.tokenToMD5(uid, token, money + otherCode);

				dataManager.spendMoney(token, uid, gid, mlmemo, intMoney,
						password, otherCode, customerOrder);

				if (pd == null) {
					pd = ProgressDialog.show(SpendMoneyActivity.this, "",
							"请稍等...", true, true);
				} else {
					pd.show();
				}

				break;
			default:

				super.handleMessage(msg);
				break;
			}

		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		// setContentView(R.layout.spendmoney);

		findView();
		setContentView(spendMoneyLay);

		try {
			Intent intent = getIntent();
			mlmemo = intent.getStringExtra("mlmemo");
			money = intent.getStringExtra("money");
			intMoney = Integer.parseInt(money);
			customerOrder = intent.getStringExtra("customerOrder");
			gid = intent.getStringExtra("gid");
			dataManager = new ProtocolManager(SpendMoneyActivity.this, mHandler);
			btnId_for_submit.setOnClickListener(new BtnId_for_submitListener());
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}

	}

	private void findView() {
		spendMoneyLay = new LinearLayout(this);
		LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(
				LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT);
		spendMoneyLay.setOrientation(LinearLayout.VERTICAL);

		LinearLayout.LayoutParams lp1 = new LinearLayout.LayoutParams(
				LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);
		lp1.setMargins(20, 10, 20, 10);

		EditId_for_pwd = new EditText(this);
		EditId_for_pwd.setHint("请输入密码                                    ");
		EditId_for_pwd.setLayoutParams(lp1);
		EditId_for_pwd.setTransformationMethod(PasswordTransformationMethod
				.getInstance());
		btnId_for_submit = new Button(this);
		btnId_for_submit.setText("确认");
		btnId_for_submit.setLayoutParams(lp1);
		spendMoneyLay.addView(EditId_for_pwd);
		spendMoneyLay.addView(btnId_for_submit);
	}

	class BtnId_for_submitListener implements OnClickListener {
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			if (CloudPointSDKManager.isLogin(SpendMoneyActivity.this)) {
				String uid = LoginMessageDataUtils
						.getUID(SpendMoneyActivity.this);
				String token = LoginMessageDataUtils
						.getToken(SpendMoneyActivity.this);
				token = Str_MD5.tokenToMD5(uid, token, otherCode);
				password = EditId_for_pwd.getText().toString();
				// money = EditId_for_spendMoney.getText().toString();
				if (uid == null || uid.equals("")) {
					dataManager
							.notRegisterLogin(
									DeviceTool
											.getUniqueId(SpendMoneyActivity.this),
									DeviceTool
											.getSubscriberId(SpendMoneyActivity.this));

					if (pd == null) {
						pd = ProgressDialog.show(SpendMoneyActivity.this, "",
								"请稍等...", true, true);
					} else {
						pd.show();
					}
				} else if (password == null || password.equals("")) {
					toastInfo = "请输入密码";
					Toast.makeText(SpendMoneyActivity.this, toastInfo,
							Toast.LENGTH_LONG).show();
				} else {
					dataManager.getValidationId(Contants.OTHERCODE);
					if (pd == null) {
						pd = ProgressDialog.show(SpendMoneyActivity.this, "",
								"请稍等...", true, true);
					} else {
						pd.show();
					}
				}
			} else {
				Toast.makeText(SpendMoneyActivity.this, "请先登录",
						Toast.LENGTH_LONG).show();
			}

		}
	}
}
